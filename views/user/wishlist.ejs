<%- include('../partials/user/header') %>

<div class="container mt-5">
    <h3 class="mb-4">My Wishlist</h3>
    
    <% if (wishlistItems && wishlistItems.length > 0) { %>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Product Name</th>
                        <th>Description</th>
                        <th>Regular Price</th>
                        <th>Sale Price</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% wishlistItems.forEach(product => { %>
                        <tr>
                            <td>
                                <% if (product.productImage && product.productImage.length > 0) { %>
                                    <img src="/uploads/<%= product.productImage[0] %>" alt="<%= product.name %>" style="height: 100px; width: 100px; object-fit: cover;">
                                <% } else { %>
                                    <img src="/uploads/default-product.jpg" alt="<%= product.name %>" style="height: 100px; width: 100px; object-fit: cover;">
                                <% } %>
                            </td>
                            <td><%= product.productName %></td>
                            <td><%= product.description %></td>
                            <td class="price-strike"><strike>₹<%= product.regularPrice %></strike></td>
                            <td class="price-sale">₹<%= product.salePrice %></td>
                            <td>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-primary btn-sm add-to-cart" data-product-id="<%= product._id %>">
                                        Add to Cart
                                    </button>
                                    <button class="btn btn-danger btn-sm remove-from-wishlist" data-product-id="<%= product._id %>">
                                        Remove
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
            
            <!-- Pagination -->
            <nav aria-label="Wishlist pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    <% if (pagination.totalPages > 1) { %>
                        <li class="page-item <%= pagination.page === 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="/wishlist?page=<%= pagination.prevPage %>" <%= pagination.page === 1 ? 'tabindex="-1" aria-disabled="true"' : '' %>>Previous</a>
                        </li>
                        
                        <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                            <li class="page-item <%= pagination.page === i ? 'active' : '' %>">
                                <a class="page-link" href="/wishlist?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                        
                        <li class="page-item <%= pagination.page === pagination.totalPages ? 'disabled' : '' %>">
                            <a class="page-link" href="/wishlist?page=<%= pagination.nextPage %>" <%= pagination.page === pagination.totalPages ? 'tabindex="-1" aria-disabled="true"' : '' %>>Next</a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    <% } else { %>
        <div class="text-center">
            <p>Your wishlist is empty</p>
            <a href="/shop" class="btn btn-primary">Continue Shopping</a>
        </div>
    <% } %>
</div>

<style>
    .btn-sm {
        font-size: 0.8rem;
        padding: 0.50rem 1.5rem;
    }

    .table img {
        transition: transform 0.3s ease;
        border-radius: 8px;
    }

    .table img:hover {
        transform: scale(1.05);
    }

    .table td {
        vertical-align: middle;
    }

    .price-strike {
        color: #6c757d;
        font-size: 0.9em;
    }

    .price-sale {
        color: #dc3545;
        font-weight: bold;
        font-size: 1.1em;
    }

    /* Pagination Styles */
    .pagination {
        margin: 2rem 0;
        gap: 5px;
    }

    .page-item {
        margin: 0 2px;
    }

    .page-link {
        color: #333;
        background-color: #f8f9fa;
        border: 2px solid #e9ecef;
        padding: 8px 16px;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .page-link:hover {
        color: #fff;
        background: linear-gradient(135deg, #e94560, #d83a6f);
        border-color: #d83a6f;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(233, 69, 96, 0.2);
    }

    .page-item.active .page-link {
        color: #fff;
        background: linear-gradient(135deg, #e94560, #d83a6f);
        border-color: #d83a6f;
        box-shadow: 0 4px 12px rgba(233, 69, 96, 0.3);
    }

    .page-item.disabled .page-link {
        color: #adb5bd;
        background-color: #f8f9fa;
        border-color: #e9ecef;
        pointer-events: none;
        opacity: 0.7;
    }

    /* Previous/Next buttons special styling */
    .page-item:first-child .page-link,
    .page-item:last-child .page-link {
        background: linear-gradient(135deg, #ffffff, #f8f9fa);
        color: #e94560;
        font-weight: 600;
        min-width: 100px;
        text-align: center;
    }

    .page-item:first-child .page-link:hover,
    .page-item:last-child .page-link:hover {
        background: linear-gradient(135deg, #e94560, #d83a6f);
        color: #fff;
    }

    /* Add pulse animation to active page */
    @keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(233, 69, 96, 0.4);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(233, 69, 96, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(233, 69, 96, 0);
        }
    }

    .page-item.active .page-link {
        animation: pulse 2s infinite;
    }

    /* Responsive adjustments */
    @media (max-width: 576px) {
        .pagination {
            gap: 3px;
        }

        .page-link {
            padding: 6px 12px;
            font-size: 0.9rem;
        }

        .page-item:first-child .page-link,
        .page-item:last-child .page-link {
            min-width: 80px;
        }
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

document.addEventListener('DOMContentLoaded', function() {
    // Function to update counts
    const updateCounts = () => {
        // Dispatch event to update wishlist count
        window.dispatchEvent(new Event('wishlistUpdated'));
    };

    // Add to Cart
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', async function() {
            const productId = this.getAttribute('data-product-id');
            const row = this.closest('tr');
            
            try {
                // First add to cart
                const cartResponse = await fetch('/addToCart', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ id: productId,quantity: 1})
                });

                if (!cartResponse.ok) {
                    throw new Error('Failed to add to cart');
                }

                const cartData = await cartResponse.json();
                
                if (cartData.success) {
                    // If added to cart successfully, remove from wishlist
                    const wishlistResponse = await fetch('/removeFromWishlist', {
                        method: 'DELETE',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify({ productId: productId })
                    });

                    if (!wishlistResponse.ok) {
                        throw new Error('Failed to remove from wishlist');
                    }

                    const wishlistData = await wishlistResponse.json();

                    if (wishlistData.success) {
                        // Update counts
                        updateCounts();

                        // Remove the row with animation
                        row.style.transition = 'opacity 0.5s';
                        row.style.opacity = '0';
                        setTimeout(() => {
                            row.remove();
                            // If no items left, refresh the page to show empty state
                            if (document.querySelectorAll('tbody tr').length === 0) {
                                window.location.reload();
                            }
                        }, 500);

                        // Show success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Product added to cart and removed from wishlist',
                            showConfirmButton: true,
                            confirmButtonText: "OK",
                            timer: 2000
                        });
                    }
                } 
                else 
                {
                    throw new Error(cartData.message || 'Failed to add to cart');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to process your request'
                });
            }
        });
    });

    // Remove from Wishlist
    document.querySelectorAll('.remove-from-wishlist').forEach(button => {
        button.addEventListener('click', async function() {
            try {
                const productId = this.getAttribute('data-product-id');
                const row = this.closest('tr');

                const response = await fetch('/removeFromWishlist', {
                    method: 'DELETE',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ productId: productId })
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();

                if (data.success) {
                    // Update counts
                    updateCounts();

                    // Remove the row with animation
                    row.style.transition = 'opacity 0.5s';
                    row.style.opacity = '0';
                    setTimeout(() => {
                        row.remove();
                        // If no items left, refresh the page to show empty state
                        if (document.querySelectorAll('tbody tr').length === 0) {
                            location.reload();
                        }
                    }, 500);

                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Product removed from wishlist',
                        showConfirmButton: true,
                        confirmButtonText: "OK",
                        timer: 2000
                    });
                } else {
                    throw new Error(data.message || 'Failed to remove from wishlist');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to remove product from wishlist'
                });
            }
        });
    });
});
</script>

<%- include('../partials/user/footer') %>