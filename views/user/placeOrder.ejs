<head>
<%- include('../partials/user/header.ejs') %>
    <link href="https://cdn.razorpay.com/static/assets/razorpay-checkout.css" rel="stylesheet">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>
    <style>
        .order-container {
            max-width: 1200px;
            margin: 20px auto;
            display: flex;
            gap: 20px;
        }

        .order-steps {
            flex: 2;
        }

        .order-sidebar {
            flex: 1;
        }

        .step-box {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .step-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .step-number {
            width: 24px;
            height: 24px;
            background: #f0f0f0;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
            font-size: 14px;
        }

        .step-title {
            font-size: 16px;
            font-weight: 500;
            margin: 0;
        }

        .change-btn {
            margin-left: auto;
            color: #4285f4;
            text-decoration: none;
            font-size: 14px;
        }

        .product-item {
            display: flex;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }

        .product-image {
            width: 80px;
            height: 80px;
            object-fit: contain;
            margin-right: 15px;
        }

        .product-details {
            flex-grow: 1;
        }

        .product-name {
            font-size: 14px;
            margin-bottom: 5px;
        }

        .seller-name {
            color: #666;
            font-size: 12px;
            margin-bottom: 5px;
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 14px;
        }

        .total-row {
            font-weight: 500;
            font-size: 16px;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .savings {
            color: #388e3c;
            font-size: 14px;
            margin-top: 10px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .secure-badge {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 15px;
            color: #666;
            font-size: 13px;
        }

        .address-details {
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .address-field {
            display: flex;
            margin-bottom: 10px;
            font-size: 14px;
        }

        .field-label {
            width: 100px;
            font-weight: 500;
            color: #666;
        }

        .field-value {
            flex: 1;
            color: #333;
        }

        .no-address {
            text-align: center;
            padding: 20px;
        }

        .no-address p {
            margin-bottom: 15px;
            color: #666;
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .order-item {
            padding: 15px;
            border-bottom: 1px solid #eee;
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .product-info {
            display: flex;
            gap: 15px;
        }

        .product-image {
            width: 80px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
        }

        .product-details {
            flex: 1;
            display: flex;
            justify-content: space-between;
        }

        .product-info-left {
            flex: 1;
        }

        .product-info-right {
            text-align: right;
            min-width: 200px;
        }

        .price-line {
            margin-bottom: 5px;
            font-size: 14px;
            color: #666;
        }

        .price-line .label {
            display: inline-block;
            width: 100px;
            text-align: left;
        }

        .price-line.discount {
            color: #28a745;
        }

        .price-line.subtotal {
            font-weight: 500;
            color: #333;
            margin-top: 8px;
            padding-top: 8px;
            border-top: 1px dashed #dee2e6;
        }

        .product-title {
            font-size: 16px;
            margin: 0 0 5px;
            color: #333;
        }

        .seller {
            font-size: 13px;
            color: #666;
            margin: 0 0 10px;
        }

        .price-calc {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
        }

        .quantity {
            color: #666;
        }

        .equals {
            color: #999;
        }

        .subtotal {
            font-weight: 500;
            color: #333;
        }

        .price-summary {
            margin-top: 20px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .summary-title {
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #dee2e6;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            font-size: 14px;
            color: #666;
        }

        .summary-item.total {
            font-weight: 500;
            color: #333;
            font-size: 16px;
            padding-top: 12px;
            margin-top: 12px;
            border-top: 1px dashed #dee2e6;
        }

        .text-success {
            color: #28a745;
        }

        .savings-info {
            text-align: center;
            color: #28a745;
            font-size: 14px;
            font-weight: 500;
            margin: 15px 0;
        }

        .place-order-btn {
            width: 100%;
            padding: 12px;
            background-color: #ff5722;
            color: white;
            border: none;
            border-radius: 4px;
            font-weight: 500;
            cursor: pointer;
            margin-top: 10px;
        }

        .place-order-btn:hover {
            background-color: #f4511e;
        }

        .secure-info {
            text-align: center;
            color: #666;
            font-size: 12px;
            margin-top: 15px;
        }

        .secure-info i {
            margin-right: 5px;
            color: #28a745;
        }

        .price-details {
            position: absolute;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            text-align: right;
        }

        .regular-price {
            color: #666;
            text-decoration: line-through;
            font-size: 13px;
        }

        .sale-price {
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin: 4px 0;
        }

        .discount {
            color: #28a745;
            font-size: 13px;
            margin-bottom: 4px;
        }

        .item-total {
            font-size: 14px;
            color: #666;
            border-top: 1px dashed #dee2e6;
            padding-top: 4px;
            margin-top: 4px;
        }

        .place-order-btn {
            width: 100%;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            font-weight: bold;
            cursor: pointer;
            transition: opacity 0.3s;
            font-family: Arial, sans-serif;
            font-size: 16px;
            margin-top: 10px;
        }

        .place-order-btn:hover {
            opacity: 0.9;
            background-color: #0056b3;
        }

        .address-option {
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .address-option:hover {
            border-color: #007bff !important;
            background-color: #f8f9fa;
        }
        
        .address-option input[type="radio"] {
            cursor: pointer;
        }
        
        .address-option input[type="radio"]:checked + div {
            color: #000;
        }
        
        .address-details-text {
            color: #666;
            font-size: 0.9rem;
            line-height: 1.5;
        }
        
        .address-details-text p {
            margin-bottom: 0.5rem;
        }
        
        .address-details-text strong {
            color: #333;
            min-width: 80px;
            display: inline-block;
        }
        
        .badge {
            font-weight: normal;
            padding: 0.5em 1em;
        }
        
        .badge.bg-secondary {
            background-color: #6c757d !important;
            color: white !important;
            font-size: 0.9rem;
            padding: 0.5em 1em;
            font-weight: normal;
            display: inline-block;
            white-space: nowrap;
        }
        
        .border-primary {
            border-width: 2px !important;
        }

        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 15px;
            padding: 15px 0;
        }

        .payment-option {
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            transition: all 0.3s ease;
        }

        .payment-option:hover {
            border-color: #007bff;
            background-color: #f8f9fa;
        }

        .payment-option-content {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .payment-option .form-check-input {
            margin-top: 0;
            margin-right: 15px;
            cursor: pointer;
            width: 20px;
            height: 20px;
        }

        .payment-label {
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 0;
            flex: 1;
            cursor: pointer;
        }

        .payment-option i {
            font-size: 24px;
            color: #6c757d;
            width: 40px;
            text-align: center;
        }

        .payment-text {
            flex: 1;
        }

        .payment-text h4 {
            margin: 0;
            font-size: 16px;
            color: #333;
        }

        .payment-text p {
            margin: 5px 0 0;
            font-size: 13px;
            color: #6c757d;
        }

        .payment-option:has(.form-check-input:checked) {
            border-color: #007bff;
            background-color: #f8f9fa;
        }

        .payment-option:has(.form-check-input:checked) i {
            color: #007bff;
        }

        .payment-option:has(.form-check-input:checked) .payment-text h4 {
            color: #007bff;
        }

        .price-details-card {
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .price-details-title {
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #dee2e6;
        }

        .price-details-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            font-size: 14px;
            color: #666;
        }

        .price-details-row.total-row {
            font-weight: 500;
            color: #333;
            font-size: 16px;
            padding-top: 12px;
            margin-top: 12px;
            border-top: 1px dashed #dee2e6;
        }

        .price-details-divider {
            height: 1px;
            background-color: #dee2e6;
            margin: 15px 0;
        }

        .charges-section {
            margin-top: 15px;
        }

        .savings-banner {
            text-align: center;
            color: #28a745;
            font-size: 14px;
            font-weight: 500;
            margin: 15px 0;
        }

        /* Coupon Styles */
        .coupon-section {
            padding: 15px;
            border-bottom: 1px solid #eee;
            margin-bottom: 15px;
        }

        .coupon-input {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }

        .coupon-input input {
            flex: 1;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .coupon-input button {
            background: #e94560;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .coupon-input button:hover {
            background: #d83a6f;
        }

        /* Coupon Modal Styles */
        .coupon-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .coupon-modal-content {
            background: white;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .coupon-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .coupon-modal-header h4 {
            margin: 0;
            color: #333;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #666;
        }

        .coupon-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .coupon-item {
            border: 1px dashed #ddd;
            padding: 15px;
            border-radius: 6px;
            background: #f9f9f9;
        }

        .coupon-code {
            font-weight: bold;
            color: #e94560;
            font-size: 16px;
            margin-bottom: 5px;
        }

        .coupon-description {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
        }

        .coupon-validity {
            font-size: 12px;
            color: #999;
        }

        .copy-code {
            background: #e94560;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            float: right;
        }

        .copy-code:hover {
            background: #d83a6f;
        }

        /* Updated Coupon Section Styles */
        .coupon-section {
            padding: 15px;
            border-bottom: 1px solid #eee;
            margin-bottom: 15px;
        }

        .coupon-input {
            display: flex;
            gap: 10px;
            margin-bottom: 12px;
        }

        .coupon-input input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .coupon-input input:focus {
            border-color: #e94560;
            outline: none;
            box-shadow: 0 0 0 2px rgba(233, 69, 96, 0.1);
        }

        .apply-btn {
            background: #e94560;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .apply-btn:hover {
            background: #d83a6f;
            transform: translateY(-1px);
        }

        .available-coupons-btn {
            width: 100%;
            background: #f8f9fa;
            border: 1px dashed #e94560;
            color: #e94560;
            padding: 10px;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .available-coupons-btn:hover {
            background: #fff1f3;
            transform: translateY(-1px);
        }

        .available-coupons-btn i {
            font-size: 16px;
        }

        /* Updated Price Details Styles */
        .price-details-content {
            padding: 15px;
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 12px;
            font-size: 14px;
        }

        .price-label {
            color: #666;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .price-value {
            font-weight: 500;
            color: #333;
        }

        .discount-row .price-value {
            color: #28a745;
            font-weight: 600;
        }

        .info-icon {
            color: #999;
            font-size: 14px;
            cursor: help;
        }

        .price-divider {
            height: 1px;
            background: #eee;
            margin: 15px 0;
        }

        .total-row {
            margin-top: 15px;
            font-size: 16px;
        }

        .total-row .price-label {
            color: #333;
            font-weight: 600;
        }

        .total-row .price-value {
            color: #e94560;
            font-size: 18px;
            font-weight: 600;
        }

        .savings-banner {
            margin-top: 15px;
            background: #f8fff9;
            border: 1px dashed #28a745;
            padding: 10px;
            border-radius: 6px;
            display: flex;
            align-items: center;
            gap: 10px;
            color: #28a745;
            font-weight: 500;
        }

        .savings-banner i {
            font-size: 18px;
        }

        .coupon-item {
            border: 1px dashed #ddd;
            padding: 15px;
            border-radius: 6px;
            background: #f9f9f9;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

        .coupon-item:hover {
            border-color: #e94560;
            box-shadow: 0 2px 8px rgba(233, 69, 96, 0.1);
        }

        .coupon-code {
            font-weight: bold;
            color: #e94560;
            font-size: 16px;
            margin-bottom: 8px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .coupon-description {
            font-size: 14px;
            color: #666;
            margin-bottom: 12px;
        }

        .coupon-details {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .discount-badge {
            background: #e9ecef;
            color: #e94560;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 13px;
            font-weight: 500;
        }

        .min-purchase {
            font-size: 13px;
            color: #666;
        }

        .coupon-validity {
            font-size: 12px;
            color: #999;
        }

        .copy-code {
            background: #e94560;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
            transition: background 0.3s;
        }

        .copy-code:hover {
            background: #d83a6f;
        }
    </style>

    <body>
        <div class="container order-container">
            <div class="order-steps">

                <!-- Delivery Address Step -->
                <div class="step-box">
                    <div class="step-header">
                        <div class="step-number">1</div>
                        <h2 class="step-title">DELIVERY ADDRESS</h2>
                        <a href="/userAddress" class="change-btn">CHANGE</a>
                    </div>
                    <div class="step-content">
                        <div class="address-details">
                            <% if (user.address && user.address.length > 0) { %>
                                <form id="addressForm">
                                    <% for(let i=0; i < user.address.length; i++) { %>
                                        <div class="address-option mt-4 p-4 border rounded <%= i === 0 ? 'border-primary' : '' %>">
                                            <div class="d-flex align-items-start">
                                                <input type="radio" name="selectedAddress" id="address<%= i %>" value="<%= i %>"
                                                       <%= i === 0 ? 'checked' : '' %> 
                                                       class="form-check-input me-3 mt-2">
                                                <div class="flex-grow-1">
                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                        <h5 class="mb-0"><%= user.address[i].fullName %></h5>
                                                        <span class="badge bg-secondary"><%= user.address[i].phone %></span>
                                                    </div>
                                                    <div class="address-details-text">
                                                        <p class="mb-1"><strong>Street:</strong> <%= user.address[i].street %></p>
                                                        <p class="mb-1"><strong>City:</strong> <%= user.address[i].city %></p>
                                                        <p class="mb-1"><strong>State:</strong> <%= user.address[i].state %></p>
                                                        <!-- <p class="mb-1"><strong>Country:</strong> <%= user.address[i].country %></p> -->
                                                        <p class="mb-0"><strong>PIN Code:</strong> <%= user.address[i].pinCode %></p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <% } %>
                                </form>
                            <% } else { %>
                                <div class="no-address">
                                    <p>No delivery address found. Please add an address to continue.</p>
                                    <a href="/userAddress" class="btn btn-primary">Add Address</a>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>

                <!-- Order Summary Step -->
                <div class="step-box">
                    <div class="step-header">
                        <div class="step-number">2</div>
                        <h2 class="step-title">ORDER SUMMARY</h2>
                    </div>
                    <div class="step-content">
                        <% let total=0; %>
                            <% products.forEach(product=> { %>
                                <% const itemTotal=product.salePrice * product.quantity; %>
                                    <% total +=itemTotal; %>
                                        <div class="order-item">
                                            <div class="product-info">
                                                <img src="/uploads/<%= product.productImage[0] %>"
                                                    alt="<%= product.productName %>" class="product-image">
                                                <div class="product-details">
                                                    <div class="product-info-left">
                                                        <h3 class="product-title">
                                                            <%= product.productName %>
                                                        </h3>
                                                        <p class="seller">Seller: <%= product.seller || 'Book Store' %></p>
                                                    </div>
                                                    <div class="product-info-right">
                                                        <div class="price-line">
                                                            <span class="label">Regular Price:</span>
                                                            <span>₹<strike><%= product.regularPrice %></strike></span>
                                                        </div>
                                                        <div class="price-line">
                                                            <span class="label">Sale Price:</span>
                                                            <span>₹<%= product.salePrice %></span>
                                                        </div>
                                                        <div class="price-line discount">
                                                            <span class="label">Discount:</span>
                                                            <span>
                                                                <%= product.offer %>20% off
                                                            </span>
                                                        </div>
                                                        <div class="price-line">
                                                            <span class="label">Quantity:</span>
                                                            <span>
                                                                <%= product.quantity %>
                                                            </span>
                                                        </div>
                                                        <div class="price-line subtotal">
                                                            <span class="label">Subtotal:</span>
                                                            <span>
                                                                <%= product.quantity %> × ₹<%= product.salePrice %> = ₹<%= itemTotal %>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <% }); %>
                    </div>
                </div>
            </div>
            <div class="order-sidebar">
                <div class="price-details-card">
                    <h3 class="price-details-title">PRICE DETAILS</h3>
                    <% let subtotal = 0, regularTotal = 0, savings = 0, couponDiscount = 0; %>
                    <% products.forEach(function(product) { %>
                        <% subtotal = subtotal + product.salePrice * product.quantity %>
                        <% regularTotal =regularTotal + product.regularPrice * product.quantity %>
                    <% }); %>
                    <% savings = regularTotal - subtotal %>

                    <!-- Add Coupon Section -->
                    <div class="coupon-section">
                        <div class="coupon-input">
                            <input type="text" id="couponCode" class="form-control" placeholder="Enter Coupon Code">
                            <button onclick="applyCoupon()" class="btn btn-primary apply-btn">Apply</button>
                        </div>
                        <button onclick="showAvailableCoupons()" class="available-coupons-btn" id="couponButton">
                            <i class="fas fa-ticket-alt"></i> View Available Coupons
                        </button>
                    </div>

                    <!-- Price Details Section -->
                    <div class="price-details-content">
                        <!-- Regular Price -->
                        <div class="price-row">
                            <span class="price-label">Regular Price (<%= products.length %> items)</span>
                            <span class="price-value text-decoration-line-through">₹<%= regularTotal.toFixed(2) %></span>
                        </div>

                        <!-- Sale Price -->
                        <div class="price-row">
                            <span class="price-label">Sale Price</span>
                            <span class="price-value">₹<%= subtotal.toFixed(2) %></span>
                        </div>

                        <!-- Discount -->
                        <div class="price-row discount-row">
                            <span class="price-label">Discount</span>
                            <span class="price-value  text-success">- ₹<%= savings.toFixed(2) %></span>
                        </div>

                        <!-- Coupons -->
                        <div class="price-row discount-row">
                            <span class="price-label">Coupons for you</span>
                            <span class="price-value coupon text-success">- ₹<%= couponDiscount.toFixed(2) %></span>
                        </div>

                        <div class="price-divider"></div>

                        <!-- Additional Charges -->
                        <div class="charges-section">
                            <div class="price-row">
                                <span class="price-label">
                                    Delivery Fee
                                    <i class="fas fa-info-circle info-icon" data-bs-toggle="tooltip" title="Standard delivery charges"></i>
                                </span>
                                <span class="price-value">₹40.00</span>
                            </div>

                            <div class="price-row">
                                <span class="price-label">
                                    Packaging Fee
                                    <i class="fas fa-info-circle info-icon" data-bs-toggle="tooltip" title="Secure packaging charges & Open Box Delivery"></i>
                                </span>
                                <span class="price-value">₹10.00</span>
                            </div>
                        </div>

                        <div class="price-divider"></div>

                        <!-- Total Amount -->
                        <div class="price-row total-row">
                            <span class="price-label">Total Amount</span>
                            <span class="price-value total-amount" >₹<%= (subtotal + 50 - couponDiscount).toFixed(2) %></span>
                        </div>

                        <!-- Savings Banner -->
                        <div class="savings-banner">
                            <i class="fas fa-piggy-bank"></i>
                            <span>Total Savings: ₹<%= savings.toFixed(2) %></span>
                        </div>
                    </div>
                </div>
                <div class="payment-options">
                    <div class="payment-option">
                        <div class="payment-option-content">
                            <input type="radio" name="paymentMethod" id="cod" value="cod" checked class="form-check-input">
                            <label for="cod" class="payment-label">
                                <i class="fas fa-money-bill-wave"></i>
                                <div class="payment-text">
                                    <h4>Cash on Delivery</h4>
                                    <p>Pay when you receive your order</p>
                                </div>
                            </label>
                        </div>
                    </div>
                    <div class="payment-option">
                        <div class="payment-option-content">
                            <input type="radio" name="paymentMethod" id="online" value="online" class="form-check-input">
                            <label for="online" class="payment-label">
                                <i class="fas fa-credit-card"></i>
                                <div class="payment-text">
                                    <h4>Online Payment</h4>
                                    <p>Pay using credit/debit card, net banking, etc.</p>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
                <div>
                    <div class="payment-option">
                        <div class="payment-option-content">
                            <input type="radio" name="paymentMethod" id="wallet" value="wallet" class="form-check-input">
                            <label for="wallet" class="payment-label">
                                <i class="fas fa-wallet"></i>
                                <div class="payment-text">
                                    <h4>Wallet Payment</h4>
                                    <p>Pay using your wallet balance</p>
                                </div>
                            </label>
                        </div>
                    </div>
                </div>
                <button onclick="placeOrder()" class="place-order-btn">PLACE ORDER</button>
            </div>
        </div>

        <!-- Add Coupon Modal -->
        <div id="couponModal" class="coupon-modal">
            <div class="coupon-modal-content">
                <div class="coupon-modal-header">
                    <h4>Available Coupons</h4>
                    <button class="close-modal" onclick="closeCouponModal()">&times;</button>
                </div>
                <div class="coupon-list" id="couponList">
                    <!-- Coupons will be loaded here dynamically -->
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            async function placeOrder() {
                try {
                    const orderItems = '<%- JSON.stringify(products.map(p => ({ productId: p._id, quantity: p.quantity }))) %>';
                    const selectedAddressIndex = document.querySelector('input[name="selectedAddress"]:checked').value;
                    const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
                    
                    try {
                        const response = await fetch('/placeOrder', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ 
                                items: orderItems,
                                addressIndex: selectedAddressIndex,
                                paymentMethod: selectedPaymentMethod
                            })
                        });

                        if (response.ok) {
                            const result = await response.json();
                            if (result.success) {
                                if(result.paymentMethod === 'online'){
                                    const razorpayOrder = await fetch('/razorpay/createOrder',{
                                        method:'POST',
                                        headers:{'Content-Type':'application/json'},
                                        body:JSON.stringify({
                                            orderId: result.orderId
                                        })
                                    });
                                    const orderRazorpay = await razorpayOrder.json();
                                    if(orderRazorpay.success){
                                        const options = {
                                            key: orderRazorpay.key,
                                            amount: orderRazorpay.order.amount,
                                            currency: "INR",
                                            name: "Bookstore",
                                            description: "Payment for your order",
                                            order_id: orderRazorpay.order.id,
                                            handler: async function (response) {
                                                try {
                                                    const verifyResponse = await fetch('/razorpay/verify', {
                                                        method: 'POST',
                                                        headers: { 'Content-Type': 'application/json' },
                                                        body: JSON.stringify({
                                                            razorpay_order_id: response.razorpay_order_id,
                                                            razorpay_payment_id: response.razorpay_payment_id,
                                                            razorpay_signature: response.razorpay_signature,
                                                            orderId: result.orderId
                                                        })
                                                    });
                                                    const verifyResult = await verifyResponse.json();
                                                    if (verifyResult.success) {
                                                        Swal.fire({
                                                            icon: 'success',
                                                            title: "Online Payment Success",
                                                            text: "Your Order is placed",
                                                            showConfirmButton: true,
                                                            confirmButtonText: "OK",
                                                            allowOutsideClick: false
                                                        }).then(() => {
                                                            window.location.href = `/orderConfirmation/${result.orderId}`;
                                                        });
                                                    } else {
                                                        Swal.fire({
                                                            icon: 'error',
                                                            title: 'Payment Verification Failed',
                                                            text: 'There was an issue verifying your payment.',
                                                            showConfirmButton: true
                                                        });
                                                    }
                                                } catch (error) {
                                                    console.error('Error verifying payment:', error);
                                                    Swal.fire({
                                                        icon: 'error',
                                                        title: 'Error!',
                                                        text: 'Failed to verify payment. Please contact support.',
                                                        showConfirmButton: true
                                                    });
                                                }
                                            },
                                            prefill: {
                                                name: "<%= user.name %>",
                                                email: "<%= user.email %>"
                                            },
                                            theme: {
                                                color: "#3399cc"
                                            },
                                            modal: {
                                                ondismiss: async function() {
                                                    const verifyResponse = await fetch('/razorpay/verify', {
                                                        method: 'POST',
                                                        headers: { 'Content-Type': 'application/json' },
                                                        body: JSON.stringify({
                                                            orderId: result.orderId
                                                        })
                                                    });
                                                    const verifyResult = await verifyResponse.json();
                                                    
                                                    Swal.fire({
                                                        icon: 'warning',
                                                        title: 'Payment Incomplete',
                                                        text: 'Your payment was not completed. You can retry the payment from your orders page.',
                                                        showConfirmButton: true
                                                    }).then(() => window.location.href = '/orders');
                                                }
                                            }
                                        };
                                        const rzp = new Razorpay(options);
                                        rzp.open();
                                        rzp.on('payment.failed',async function(response) {
                                            const verifyResponse = await fetch('/razorpay/verify', {
                                                        method: 'POST',
                                                        headers: { 'Content-Type': 'application/json' },
                                                        body: JSON.stringify({
                                                            orderId: result.orderId
                                                        })
                                                    });
                                            const verifyResult = await verifyResponse.json();
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Payment Failed',
                                                text: verifyResult.message || 'The payment process failed. Please try again.',
                                                showConfirmButton: true
                                            }).then(()=>window.location.href = '/orders')
                                        });
                                        rzp.on('modal.closed', async function() {
                                            const verifyResponse = await fetch('/razorpay/verify', {
                                                method: 'POST',
                                                headers: { 'Content-Type': 'application/json' },
                                                body: JSON.stringify({
                                                    orderId: result.orderId
                                                })
                                            });
                                            const verifyResult = await verifyResponse.json();
                                            
                                            if (!verifyResult.success) {
                                                Swal.fire({
                                                    icon: 'warning',
                                                    title: 'Payment Incomplete',
                                                    text: 'Your payment was not completed. You can retry the payment from your orders page.',
                                                    showConfirmButton: true
                                                }).then(() => window.location.href = '/orders');
                                            }
                                        });
                                    }
                                } else if (result.paymentMethod === 'wallet') {
                                    if (!result.success) {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Insufficient Balance',
                                            text: `Your wallet balance is low. You need ₹${result.requiredAmount} but your wallet only has ₹${result.walletBalance}`,
                                            showConfirmButton: true
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Payment Successful',
                                            text: `₹${result.amount} has been deducted from your wallet`,
                                            showConfirmButton: true,
                                            confirmButtonText: 'Okay'
                                        }).then(() => {
                                            window.location.href = `/orderConfirmation/${result.orderId}`;
                                        });
                                    }
                                } else {
                                    window.location.href = `/orderConfirmation/${result.orderId}`;
                                }
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: result.message || 'Failed to place order. Please try again.',
                                    confirmButtonText: 'Okay'
                                });
                            }
                        } else {
                            const error = await response.json();
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: error.message || 'Failed to place order. Please try again.',
                                confirmButtonText: 'Okay'
                            });
                        }
                    } catch (error) {
                        console.error('Error placing order:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: 'An error occurred. Please try again.',
                            confirmButtonText: 'Okay'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred. Please try again.',
                        confirmButtonText: 'Okay'
                    });
                }
            }

            // Coupon related functions
            async function applyCoupon() {
                const couponCode = document.getElementById('couponCode').value;
                if (!couponCode) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Please enter a coupon code',
                        showConfirmButton: true,
                        confirmButtonText: 'Okay',
                        timer: 2000
                    });
                    return;
                }

                try {
                    const response = await fetch('/applyCoupon', {
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify({ 
                            couponCode,
                            total: parseFloat(document.querySelector('.total-amount').textContent.replace('₹', ''))
                        })
                    });

                    const data = await response.json();

                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Coupon Applied!',
                            text: data.message,
                            showConfirmButton: true,
                            confirmButtonText: 'Okay',
                            timer: 2000
                        });
                        // Update price details
                        updatePriceDetails(data.discount);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed to apply coupon',
                            text: data.message,
                            showConfirmButton: true
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to apply coupon',
                        showConfirmButton: true
                    });
                }
            }

            function updatePriceDetails(discount) {
                // Get all necessary elements
                const subtotalElement = document.querySelector('.price-row:nth-child(1) .price-value');
                const couponDiscountElement = document.querySelector('.discount-row .coupon');
                const totalElement = document.querySelector('.total-amount');

                // Get the current subtotal (remove ₹ symbol and convert to number)
                const subtotal = parseFloat(subtotalElement.textContent.replace('₹', ''));
                
                // Update coupon discount
                couponDiscountElement.textContent = `- ₹${discount.toFixed(2)}`;
                
                // Calculate new total (subtotal - coupon discount)
                const newTotal = subtotal - discount;
                
                // Update total amount
                totalElement.textContent = `₹${newTotal.toFixed(2)}`;
            }

            async function showAvailableCoupons() {
                const couponCode = document.getElementById('couponCode');
                const couponButton = document.getElementById('couponButton');
           
                
                

                if (couponCode.value) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Already have a coupon code',
                        confirmButtonText: 'Okay'
                    });
                 return    
                }
                try {
                    const response = await fetch('/getAvailableCoupons');
                    const data = await response.json();

                    if (data.success) {
                        const couponList = document.getElementById('couponList');
                        couponList.innerHTML = '';

                        if (!data.coupons || data.coupons.length === 0) {
                            couponList.innerHTML = `
                                <div class="text-center p-4">
                                    <i class="fas fa-ticket-alt text-muted" style="font-size: 2rem;"></i>
                                    <p class="text-muted mt-2">No coupons available at the moment</p>
                                </div>`;
                            return;
                        }

                        data.coupons.forEach(coupon => {
                            const discountText = coupon.discountType === 'percentage' 
                                ? `${coupon.discountAmount}% OFF` 
                                : `₹${coupon.discountAmount} OFF`;

                            const couponItem = document.createElement('div');
                            couponItem.className = 'coupon-item';
                            couponItem.innerHTML = `
                                <div class="coupon-code">
                                    ${coupon.code}
                                    <button class="copy-code" onclick="copyCouponCode('${coupon.code}', ${coupon.discountAmount}, '${coupon.discountType}')">
                                        Copy Code
                                    </button>
                                </div>
                                <div class="coupon-description">${coupon.description}</div>
                                <div class="coupon-details">
                                    <div class="discount-badge">${discountText}</div>
                                    <div class="min-purchase">Min. Purchase: ₹${coupon.minimumPurchase}</div>
                                </div>
                                <div class="coupon-validity">Valid till: ${new Date(coupon.expiryDate).toLocaleDateString()}</div>
                            `;
                            couponList.appendChild(couponItem);
                        });

                        document.getElementById('couponModal').style.display = 'flex';
                    } else {
                        throw new Error(data.message || 'Failed to fetch coupons');
                    }
                } catch (error) {
                    console.error('Error fetching coupons:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to load available coupons',
                        showConfirmButton: true
                    });
                }
            }

            function copyCouponCode(code, discount, discountType) {
                navigator.clipboard.writeText(code).then(() => {
                    document.getElementById('couponCode').value = code;
                    closeCouponModal();
                    
                    // Calculate discount based on type
                    let discountText = discountType === 'percentage' ? `${discount}%` : `₹${discount}`;
                        
                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon code copied!',
                        text: `${discountText} discount will be applied after clicking Apply`,
                        showConfirmButton: true,
                        confirmButtonText: 'Apply Now',
                        showCancelButton: true,
                        cancelButtonText: 'Later'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            applyCoupon();
                        }
                    });
                }).catch(err => {
                    console.error('Error copying code:', err);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to copy coupon code',
                        showConfirmButton: true
                    });
                });
            }

            function closeCouponModal() {
                document.getElementById('couponModal').style.display = 'none';
            }

            // Close modal when clicking outside
            document.getElementById('couponModal').addEventListener('click', function(event) {
                if (event.target === this) {
                    closeCouponModal();
                }
            });
        </script>
        <%- include('../partials/user/footer.ejs') %>
    </body>