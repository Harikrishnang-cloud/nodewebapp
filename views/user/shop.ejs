<%- include('../partials/user/header', { user: user }) %>

<div class="container-fluid py-5" style="background-color: #f5f5f5;">
    <div class="container">
        <div class="row">
            <!-- Sidebar with filters -->
            <div class="col-lg-3">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="mb-4" style="color: #e94560;">Categories</h5>
                        <div class="categories-list">
                            <% if (categories && categories.length > 0) { %>
                                <% categories.forEach(category => { %>
                                    <div class="form-check mb-2">
                                        <input class="form-check-input" type="checkbox" value="<%= category._id %>" id="category<%= category._id %>">
                                        <label class="form-check-label" for="category<%= category._id %>">
                                            <%= category.name %>
                                        </label>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p>No categories available</p>
                            <% } %>
                        </div>

                        <h5 class="mb-4 mt-4" style="color: #e94560;">Price Range</h5>
                        <div class="price-range mb-4">
                            <input type="range" class="form-range" min="0" max="10000" id="priceRange">
                            <div class="d-flex justify-content-between mt-2">
                                <span>₹0</span>
                                <span id="priceValue">₹2500</span>
                                <span>₹5000</span>
                            </div>
                        </div>

                        <button class="btn w-100" style="background-color: #a62d43; color: white;" onclick="applyFilters()">
                            Apply Filters
                        </button>
                    </div>
                </div>
            </div>

            <!-- Product grid -->
            <div class="col-lg-9">
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                            <h4 style="color: #e94560;">All Books</h4>
                            <div class="search-box">
                                <i class="fas fa-search search-icon"></i>
                                <input type="text" id="searchInput" placeholder="Search books..." class="search-input">
                            </div>
                            <div class="d-flex align-items-center">
                                <span class="me-2">Sort by:</span>
                                <select id="sortSelect" class="form-select" style="width: auto;">
                                    <option value="">Select</option>
                                    <option value="featured">Featured</option>
                                    <option value="rating">Average Rating: High to Low</option>
                                    <option value="new_arrivals">New Arrivals</option>
                                    <option value="popularity">Popularity</option>
                                    <option value="price_asc">Price: Low to High</option>
                                    <option value="price_desc">Price: High to Low</option>
                                    <option value="name_asc">Name: A to Z</option>
                                    <option value="name_desc">Name: Z to A</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-4" id="productsGrid">
                    <% if (products && products.length > 0) { %>
                        <% products.forEach(product => { %>
                            <a class="col-md-4 col-sm-6" href="/productDetails/?id=<%= product._id %>">
                                <div class="card product-card border-0 shadow-sm h-100">
                                    <img src="/uploads/<%= product.productImage[0] %>" class="card-img-top" alt="<%= product.productName %>" style="height: 200px; object-fit: cover;">
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title" style="color: #e94560;"><%= product.productName %></h5>
                                        <p class="card-text  mb-2">By <%= product.description || 'Unknown description' %></p>
                                        <div class="mt-auto">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                            <div>
                                                    <span class="fs-5 fw-bold" style="color: #e94560;">₹<%= product.salePrice || product.price %></span>
                                                    <% if (product.regularPrice && product.regularPrice > (product.salePrice || product.price)) { %>
                                                        <span class="text-decoration-line-through ms-2">₹<%= product.regularPrice %></span>
                                                    <% } %>
                                                </div>
                                                <% if (product.offer && product.offer > 0) { %>
                                                    <span class="badge" style="background-color: #e94560;"><%= product.offer %>% OFF</span>
                                                <% } %>
                                            </div>
                                            <button class="btn w-100" style="background-color: #e94560; color: white;" onclick="addToCart('<%= product._id %>')">
                                                Add to Cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        <% }); %>
                    <% } else { %>
                        <div class="col-12">
                            <div class="alert alert-info">No products available</div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Existing styles */

    .search-box {
        display: flex;
        align-items: center;
        background: #fff;
        border: 0px solid #e94560;
        border-radius: 35px;
        overflow: hidden;
        width: 350px;
        /* padding: 5px 12px; */
        transition: all 0.3s ease;
    }

    .search-box:focus-within {
        border-color: #d63384;
        box-shadow: 0 0 0 2px rgba(233, 69, 96, 0.1);
        width: 220px;
    }

    .search-input {
        border: none;
        padding: 5px 8px;
        outline: none;
        width: 100%;
        font-size: 15px;
        background: transparent;
    }

    .search-icon {
        color: #e94560;
        font-size: 14px;
    }

    @media (max-width: 768px) {
        .search-box {
            width: 180px;
        }
        .search-box:focus-within {
            width: 200px;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Price range slider
    const priceRange = document.getElementById('priceRange');
    const priceValue = document.getElementById('priceValue');
    const searchInput = document.getElementById('searchInput')
    const sortSelect = document.getElementById('sortSelect');

    priceRange.addEventListener('input', function() {
        priceValue.textContent = `₹${this.value}`;
    });

    sortSelect.addEventListener('change', function() {
        console.log('Sort value:', this.value);
        applyFilters();
    });

    async function applyFilters() {
        const selectedCategories = Array.from(document.querySelectorAll('.form-check-input:checked'))
            .map(checkbox => checkbox.value);
        
        const filters = {
            categories: selectedCategories,
            maxPrice: priceRange.value,
            sort: sortSelect.value
        };

        console.log('Sending filters:', filters);

        try {
            const response = await fetch('/user/filter-products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(filters)
            });

            const data = await response.json();
            if (data.success) {
                updateProductGrid(data.products);
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: data.message || 'Something went wrong!'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to apply filters'
            });
        }
    }

    function updateProductGrid(products) {
        const productGrid = document.querySelector('.row.g-4');
        if (!productGrid) return;

        let html = '';
        products.forEach(product => {
            html += `
                <div class="col-md-4 col-sm-6">
                    <div class="card product-card border-0 shadow-sm h-100">
                        <img src="/uploads/${product.productImage[0]}" class="card-img-top" alt="${product.productName}" style="height: 200px; object-fit: cover;">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title" style="color: #e94560;">${product.productName}</h5>
                            <p class="card-text mb-2">${product.description || 'Unknown description'}</p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <div>
                                        <span class="fs-5 fw-bold" style="color: #e94560;">₹${product.salePrice || product.price}</span>
                                        ${product.regularPrice && product.regularPrice > (product.salePrice || product.price) ? 
                                            `<span class="text-decoration-line-through ms-2">₹${product.regularPrice}</span>` : ''}
                                    </div>
                                    ${product.offer && product.offer > 0 ? 
                                        `<span class="badge" style="background-color: #e94560;">${product.offer}% OFF</span>` : ''}
                                </div>
                                <button class="btn w-100" style="background-color: #e94560; color: white;" onclick="addToCart('${product._id}')">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        });

        productGrid.innerHTML = html;
    }

    // Add to cart function
    async function addToCart(productId) {
        try {
            const response = await fetch('/addToCart', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ id: productId })
            });
            const data = await response.json();
            if (data.success) {
                if (data.cartCount !== undefined) {
                    const cartCountElements = document.querySelectorAll('.cart-count');
                    cartCountElements.forEach(element => {
                        const formattedCount = data.cartCount.toString().padStart(2, '0');
                        element.textContent = `(${formattedCount})`;
                    });
                }
                Swal.fire({
                    position: "center",
                    icon: "success",
                    title: data.message,
                    showConfirmButton: true,
                    timer: 2000
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: data.message,
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something went wrong!",
            });
        }
    }

    function searchBooks() {
        const searchTerm = document.getElementById('searchInput').value.trim();
        if (!searchTerm) return;

        const productsGrid = document.getElementById('productsGrid');
        productsGrid.style.opacity = '0.5';

        fetch(`/user/search-products?query=${encodeURIComponent(searchTerm)}`)
            .then(response => response.json())
            .then(data => {
                productsGrid.innerHTML = '';
                
                if (data.products && data.products.length > 0) {
                    data.products.forEach(product => {
                        const productCard = `
                            <div class="col-md-4 col-sm-6">
                                <div class="card product-card border-0 shadow-sm h-100">
                                    <img src="/uploads/${product.productImage[0]}" class="card-img-top" alt="${product.productName}" style="height: 200px; object-fit: cover;">
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title" style="color: #e94560;">${product.productName}</h5>
                                        <p class="card-text mb-2">${product.description || 'Unknown description'}</p>
                                        <div class="mt-auto">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <div>
                                                    <span class="fs-5 fw-bold" style="color: #e94560;">₹${product.salePrice || product.price}</span>
                                                    ${product.regularPrice && product.regularPrice > (product.salePrice || product.price) ? 
                                                        `<span class="text-decoration-line-through text-muted ms-2">₹${product.regularPrice}</span>` : ''}
                                                </div>
                                            </div>
                                            <button onclick="addToCart('${product._id}')" class="btn w-100" style="background-color: #e94560; color: white;">
                                                Add to Cart
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                        productsGrid.innerHTML += productCard;
                    });
                } else {
                    productsGrid.innerHTML = `
                        <div class="col-12 text-center mt-4">
                            <div class="alert alert-info">
                                No books found matching your search.
                            </div>
                        </div>
                    `;
                }
                productsGrid.style.opacity = '1';
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to search products'
                });
                productsGrid.style.opacity = '1';
            });
    }

    // Add event listener for Enter key
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            searchBooks();
        }
    });

    // Add debounced search for real-time results
    let searchTimeout;
    document.getElementById('searchInput').addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(searchBooks, 500);
    });
</script>

<%- include('../partials/user/footer', { user: user }) %>
