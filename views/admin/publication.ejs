<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Publications | Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
            color: #333;
        }
        .btn-primary {
            background-color: #e91e63 !important;
            border-color: #e91e63 !important;
        }
        .active>.page-link {
            background-color: #763b51 !important;
            border-color : #763b51 !important;
        }
        .btn-primary:hover {
            background-color: #6c334b;
        }
        .btn-danger {
            background-color: #f44336;
            border-color: #f44336;
        }
        .btn-danger:hover {
            background-color: #e53935;
        }
        .btn-warning {
            background-color: #ff9800;
            border-color: #ff9800;
        }
        .btn-warning:hover {
            background-color: #fb8c00;
        }
        .table thead {
            background-color: #6d214f;
            color: #fff;
        }
        .input-group .form-control {
            border-radius: 0.25rem;
        }
        .input-group .btn {
            border-radius: 0.25rem;
        }
        
    </style>
</head>
<body>

<%- include("../../views/partials/admin/header") %>

<div class="container my-4">
    <!-- Add Publication Section -->
    <div class="mb-3">
        <h1>Publications</h1>
        <br>
        <form action="/admin/addpublication" method="POST" class="d-flex align-items-center mt-2">
            <input type="text" id="name" name="name" class="form-control form-control-sm me-2" style="width: 30%;" placeholder="Enter publication name" required>
            <button type="submit" class="btn btn-primary btn-sm">Add</button>
        </form>
    </div>

    <!-- List of Publications -->
    <% if (publications.length > 0) { %>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">No.</th>
                    <th scope="col">Publication Name</th>
                    <th scope="col">Listed</th>
                    <!-- <th scope="col">Status</th> -->
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                <% for (let index = 0; index < publications.length; index++) { 
                    let publication = publications[index]; %>
                    <tr>
                        <th scope="row"><%= index + 1 %></th>
                        <td><%= publication.name %></td>
                        <td><%= publication.isListed ? 'Yes' : 'No' %></td>
                        <td>
                            <a href="/admin/editPublication/<%= publication._id %>" class="btn btn-sm btn-primary">Edit</a>
                        </td>
                    </tr>
                <% } %>
            </tbody>            
        </table>
<!-- Pagination Controls -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <% if (currentPage > 1) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
            </li>
        <% } else { %>
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
        <% } %>

        <% if (currentPage < totalPages) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
            </li>
        <% } else { %>
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        <% } %>
    </ul>
</nav>

    </div>
    <% } else { %>
    <p class="text-center">No publications found. Add a new publication to get started!</p>
    <% } %>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<%- include("../../views/partials/admin/footer") %>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const publicationNameInput = document.querySelector('input[name="name"]');
        
        publicationNameInput.addEventListener('blur', async function() {
            const name = this.value.trim();
            if (name) {
                try {
                    const response = await fetch(`/admin/check-publication-name?name=${encodeURIComponent(name)}`);
                    const data = await response.json();
                    
                    if (data.exists) {
                        Swal.fire({
                            title: 'Publication Name Exists',
                            text: 'This publication name already exists. Please choose a different name.',
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        });
                        this.value = '';
                        this.focus();
                    }
                } catch (error) {
                    console.error('Error checking publication name:', error);
                }
            }
        });

        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            const name = publicationNameInput.value.trim();
            
            try {
                const response = await fetch(`/admin/check-publication-name?name=${encodeURIComponent(name)}`);
                const data = await response.json();
                
                if (data.exists) {
                    Swal.fire({
                        title: 'Publication Name Exists',
                        text: 'This publication name already exists. Please choose a different name.',
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });
                    publicationNameInput.focus();
                    return;
                }
                console.log(name)
                const publicationResponse = await fetch('/admin/addpublication',{
                    method:'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body:JSON.stringify({name})
                })

                const publicationResponseData = await publicationResponse.json()
                if(publicationResponseData.success){
                    Swal.fire({
                        icon:'success',
                        title:"Publication Added Sucessfully",
                        confirmButtonText:"OK"
                    })
                }
                
                // If no duplicate found, submit the form
            } catch (error) {
                console.error('Error checking publication name:', error);
                
            }
        });
    });

    async function togglePublicationStatus(publicationId, currentStatus) {
        const confirmToggle = confirm(`Are you sure you want to ${currentStatus === 'Unblock' ? 'Block' : 'Unblock'} this publication?`);
        if (!confirmToggle) return;

        try {
            const response = await fetch(`/blockUnblock/toggle-status/${publicationId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            })
            const result = await response.json();

            if (response.ok) {
                Swal.fire(result.message);
                location.reload(); 
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message,
                });
            }
        } catch (error) {
            console.error('Error toggling publication status:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred while updating the publication status.',
            });
        }
    }
</script>

</body>
</html>
