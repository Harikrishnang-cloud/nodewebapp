<%- include('../partials/admin/header.ejs') %>

<div class="container-fluid">
    <div class="row">
<!--     
<div class="container-fluid">
    <div class="row"> -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Order Details</h1>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Order #<%= order.orderId || order._id %></h5>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6 class="mb-3">Shipping Details</h6>
                            <p class="mb-1"><strong>Name:</strong> <%= order.address.fullName %></p>
                            <p class="mb-1"><strong>Address:</strong> <%= order.address.street %></p>
                            <p class="mb-1"><strong>City:</strong> <%= order.address.city %></p>
                            <p class="mb-1"><strong>State:</strong> <%= order.address.state %></p>
                            <p class="mb-1"><strong>Country:</strong> <%= order.address.country %></p>
                            <p class="mb-1"><strong>Pin Code:</strong> <%= order.address.pinCode %></p>
                            <p class="mb-1"><strong>Phone:</strong> <%= order.address.phone %></p>
                        </div>
                        <div class="col-md-6">
                            <h6 class="mb-3">Order Information</h6>
                            <p class="mb-1"><strong>Order Date:</strong> <%= new Date(order.orderDate).toLocaleString() %></p>
                            <p class="mb-1"><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                            <p class="mb-1"><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
                            <p class="mb-1"><strong>Order Status:</strong> 
                                <span class="badge bg-<%= order.status === 'Delivered' ? 'success' : 
                                    order.status === 'Cancelled' ? 'danger' : 
                                    order.status === 'Processing' ? 'warning' : 'info' %>">
                                    <%= order.status %>
                                </span>
                            </p>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th>Return Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% order.items.forEach(item => { %>
                                <tr>
                                    <td><%= item.productName %></td>
                                    <td>₹<%= item.price.toFixed(2) %></td>
                                    <td><%= item.quantity %></td>
                                    <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                                    <td>
                                        <% if (item.returnStatus !== 'Not Eligible') { %>
                                            <span class="badge bg-<%= 
                                                item.returnStatus === 'Approved' ? 'success' :
                                                item.returnStatus === 'Rejected' ? 'danger' :
                                                item.returnStatus === 'Requested' ? 'warning' : 'secondary'
                                            %>">
                                                <%= item.returnStatus %>
                                            </span>
                                            <% if (item.returnReason) { %>
                                                <br>
                                                <small class="text-muted">Reason: <%= item.returnReason %></small>
                                            <% } %>
                                            <% if (item.returnStatus === 'Rejected' && item.rejectionReason) { %>
                                                <br>
                                                <small class="text-danger">Rejection: <%= item.rejectionReason %></small>
                                            <% } %>
                                        <% } %>
                                    </td>
                                    <td>
                                        <% if (item.returnStatus === 'Requested') { %>
                                            <button class="btn btn-sm btn-success approve-return" data-order-id="<%= order._id %>" data-item-id="<%= item._id %>">
                                                Approve
                                            </button>
                                            <button class="btn btn-sm btn-danger reject-return" data-order-id="<%= order._id %>" data-item-id="<%= item._id %>">
                                                Reject
                                            </button>
                                        <% } %>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Subtotal:</strong></td>
                                    <td>₹<%= order.totalAmount.toFixed(2) %></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <% if (order.discount) { %>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Discount:</strong></td>
                                    <td>-₹<%= order.discount.toFixed(2) %></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <% } %>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Grand Total:</strong></td>
                                    <td><strong>₹<%= (order.totalAmount - (order.discount || 0)).toFixed(2) %></strong></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                    <div class="mt-4">
                        <h6>Update Order Status</h6>
                        <form id="updateStatusForm" action="/admin/update-order-status" method="POST">
                            <input type="hidden" name="orderId" value="<%= order.orderId || order._id %>">
                            <select name="status" class="form-select" style="max-width: 200px;">
                                <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>
                            <button type="submit" class="btn btn-primary">Update Status</button>
                        </form>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Rejection Reason Modal -->
<div class="modal fade" id="rejectionModal" tabindex="-1" aria-labelledby="rejectionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectionModalLabel">Enter Rejection Reason</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="rejectionForm">
                    <input type="hidden" id="modalOrderId">
                    <input type="hidden" id="modalItemId">
                    <div class="mb-3">
                        <label for="rejectionReason" class="form-label">Reason for Rejection</label>
                        <textarea class="form-control" id="rejectionReason" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="submitRejection">Submit</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Create modal instance
    const rejectionModal = new bootstrap.Modal(document.getElementById('rejectionModal'));
    
    // Handle Approve Return
    document.querySelectorAll('.approve-return').forEach(button => {
        button.addEventListener('click', async function() {
            const orderId = this.dataset.orderId;
            const itemId = this.dataset.itemId;
            
            try {
                const response = await fetch('/admin/orders/return', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId,
                        itemId,
                        action: 'approve'
                    })
                });
                
                const data = await response.json();
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Failed to approve return');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while processing the request');
            }
        });
    });

    // Handle Reject Return - Show Modal
    document.querySelectorAll('.reject-return').forEach(button => {
        button.addEventListener('click', function() {
            // Clear previous values
            document.getElementById('rejectionReason').value = '';
            // Set new values
            document.getElementById('modalOrderId').value = this.dataset.orderId;
            document.getElementById('modalItemId').value = this.dataset.itemId;
            // Show modal
            rejectionModal.show();
        });
    });

    // Handle Reject Submit
    document.getElementById('submitRejection').addEventListener('click', async function() {
        const orderId = document.getElementById('modalOrderId').value;
        const itemId = document.getElementById('modalItemId').value;
        const rejectionReason = document.getElementById('rejectionReason').value.trim();

        if (!rejectionReason) {
            alert('Please enter a rejection reason');
            return;
        }

        try {
            const response = await fetch('/admin/orders/return', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId,
                    itemId,
                    action: 'reject',
                    rejectionReason
                })
            });
            
            const data = await response.json();
            if (data.success) {
                rejectionModal.hide();
                location.reload();
            } else {
                alert(data.message || 'Failed to reject return');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while processing the request');
        }
    });
});
</script>

<%- include('../partials/admin/footer.ejs') %>